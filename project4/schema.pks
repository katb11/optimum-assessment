CREATE TABLE users
(
    user_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username        VARCHAR2(25)  UNIQUE NOT NULL,
    password        VARCHAR2(256) NOT NULL,
    salt            VARCHAR2(256) NOT NULL,
    first_name      VARCHAR2(40),
    last_name       VARCHAR2(40),
    address_line1   VARCHAR2(50),
    address_line2   VARCHAR2(50),
    city            VARCHAR2(50),
    state           VARCHAR2(2),
    zipcode         VARCHAR2(10),
    email           VARCHAR2(254) UNIQUE NOT NULL,
    phone_number    VARCHAR2(15),
    time_created    TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE categories
(
    category_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR2(75) UNIQUE NOT NULL,
    parent_id       NUMBER,
    description     VARCHAR2(255),
    FOREIGN KEY (parent_id) REFERENCES categories(category_id)
);

CREATE TABLE products
(
    product_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title           VARCHAR2(150) NOT NULL,
    description     CLOB,
    thumbnail_url   VARCHAR2(1000) NOT NULL,
    price           NUMBER(6, 2) NOT NULL CHECK (price > 0),
    category_id     NUMBER NOT NULL,
    status          CHAR(1) DEFAULT 'A' CHECK (status IN ('A', 'O', 'R')) NOT NULL, -- A = available, O = out of stock, R = retired
    quantity        NUMBER DEFAULT 0,
    time_created    TIMESTAMP DEFAULT SYSTIMESTAMP,
    last_updated    TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

CREATE INDEX prod_category_idx ON products (category_id);
CREATE INDEX prod_status_idx ON products (status);

CREATE TABLE product_images
(
    product_id      NUMBER NOT NULL,
    image_url       VARCHAR2(1000) NOT NULL,
    image_type      CHAR(1) DEFAULT 'F' CHECK (image_type IN ('F', 'A')), -- 'F' = first, 'A' = additional
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE orders
(
    order_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         NUMBER NOT NULL,
    order_date      TIMESTAMP DEFAULT SYSTIMESTAMP,
    status          CHAR(1) DEFAULT 'I' CHECK (status IN ('I', 'P', 'S', 'D', 'C')) NOT NULL, -- I = in progress, P = partial-ship, S = shipped, D = delivered, C = cancelled
    total           NUMBER(8,2),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE INDEX ord_status_idx ON orders (user_id);
CREATE INDEX ord_user_idx ON orders (status);
CREATE INDEX ord_date_idx ON orders (order_date);

CREATE TABLE order_items
(
    order_id        NUMBER NOT NULL,
    product_id      NUMBER NOT NULL,
    quantity        NUMBER NOT NULL CHECK (quantity > 0),
    unit_price      NUMBER(6,2) NOT NULL,
	status          CHAR(1) DEFAULT 'I' CHECK (status IN ('I', 'S', 'D', 'C')), -- I = in progress, S = shipped, D = delivered, C = cancelled
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE payment_info
(
    payment_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id        NUMBER NOT NULL,
    payment_method  VARCHAR2(20),
    payment_date    TIMESTAMP DEFAULT SYSTIMESTAMP,
    amount          NUMBER(8, 2) NOT NULL,
    status          CHAR(1) DEFAULT 'P' CHECK (status IN ('S', 'F', 'P')), -- s = success, f = failure, p = processing
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE shipping_info
(
    shipping_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id        NUMBER NOT NULL,
    address_line1   VARCHAR2(50) NOT NULL,
    address_line2   VARCHAR2(50),
    city            VARCHAR2(50) NOT NULL,
    state           VARCHAR2(2) NOT NULL,
    zip_code        VARCHAR2(10),
    shipped_date    TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE archived_orders
(
    order_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id         NUMBER NOT NULL,
    order_date      TIMESTAMP DEFAULT SYSTIMESTAMP,
    status          CHAR(1) DEFAULT 'I' CHECK (status IN ('I', 'P', 'S', 'D', 'C')) NOT NULL, -- I = in progress, P = partial-ship, S = shipped, D = delivered, C = cancelled
    total           NUMBER(8,2),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE INDEX arch_ord_status_idx ON archived_orders (user_id);

CREATE TABLE archived_order_items
(
    order_id        NUMBER NOT NULL,
    product_id      NUMBER NOT NULL,
    quantity        NUMBER NOT NULL CHECK (quantity > 0),
    unit_price      NUMBER(6,2) NOT NULL,
	status          CHAR(1) DEFAULT 'I' CHECK (status IN ('I', 'S', 'D', 'C')), -- I = in progress, S = shipped, D = delivered, C = cancelled
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- view for category?
